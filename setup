#!/bin/sh

distro=$1

fcitx=("fcitx5" "fcitx5-configtool" "fcitx5-gtk" "fcitx5-qt" "fcitx5-mozc")
c_lang=("clang" "cmake" "gcc")
fonts=("noto-fonts" "noto-fonts-cjk" "noto-fonts-emoji")
x11=("xorg-server" "xorg-xinit" "xorg-xrandr" "xorg-xset" "xclip")
audio=("pipewire" "pulsemixer")
gui=(
  "flameshot" "gcolor2" "kitty" "rofi" "simplescreenrecorder"
  "lxappearance" "telegram-desktop" "mpv" "pcmanfm" "engrampa"
)
cli=(
  "dhcpcd" "docker" "exa" "light" "tree-sitter"
  "unzip" "ripgrep" "acpi" "bat" "imagemagick"
  "github-cli"
)
others=("lxsession" "ntfs-3g" "picom" "xdg-user-dirs")
shell=("zsh" "dash")

packages=(
  "${fcitx[@]}"
  "${c_lang[@]}"
  "${x11[@]}"
  "${cli[@]}"
  "${gui[@]}"
  "${others[@]}"
  "${shell[@]}"
)

# origin, prefixed with $PWD <> target, prefixed with $HOME <> Name, optional
link_paths=(
  # main app
  "nvim                 <> .config/nvim           <> Neovim"
  "awesome              <> .config/awesome        <> AwesomeWM"
  "kitty                <> .config/kitty          <> Kitty"

  # TUI apps
  "lf                   <> .config/lf             <> LF_File_Manager"
  "pacman               <> .config/pacman         <> Pacman"
  "misc/picom.conf      <> .config/picom.conf     <> Picom"
  "tmux/.tmux.conf      <> .tmux.conf             <> Tmux"

  # GUI apps
  "rofi                 <> .config/rofi           <> Rofi"
  "misc/zathurarc       <> .config/zathurarc      <> Zathura"

  # x stuff
  "i3                   <> .config/i3             <> i3_Config"
  "bspwm                <> .config/bspwm          <> BSPWM_Config"
  "sxhkd                <> .config/sxhkd          <> SXHKD_Config"
  "dunst                <> .config/dunst          <> Dunst_Config"
  "polybar              <> .config/polybar        <> Polybar_Config"
  "misc/.profile        <> .profile               <> Env_Profile"
  "misc/.xprofile       <> .xprofile              <> X_Profile"
  "misc/.Xresources     <> .Xresources            <> X_Resources"
  "misc/.xinitrc        <> .xinitrc               <> X_Init"

  # git
  "misc/.gitconfig      <> .gitconfig             <> Git_Config"

  # zsh stuff
  "zsh/.zshrc           <> .zshrc                 <> ZSH_config"
  "zsh/.zshenv          <> .zshenv                <> ZSH_Env"
  "zsh/.zprofile        <> .zprofile              <> ZSH_Profile"
  "misc/aliasrc         <> .config/aliasrc        <> Shell_Aliases"
  "misc/starship.toml   <> .config/starship.toml  <> Starship_Config"

  # wayland stuff
  "sway                 <> .config/sway           <> Sway_Config"
  "waybar               <> .config/waybar         <> Waybar_Config"
  "mako                 <> .config/mako           <> Mako_Config"
  "wofi                 <> .config/wofi           <> Wofi_Config"

  # startpage
  "misc/dev/startpage-v2   <> dev/startpage-v2    <> Startpage"
)

# concat array using delimiter
function join_by() {
  local IFS="$1"
  shift
  echo "$*"
}

function split() {
  local IFS="<>"
  read -ra array <<< "$1"
  echo "${array[@]}"
}

function setup_links() {
  for x in "${link_paths[@]}"; do
    local arr=($(split "$x"))
    local origin="$PWD/${arr[0]}"
    local target="$HOME/${arr[1]}"

    if [[ -h $target ]]; then
      printf "%-20s => already linked!\n" "${arr[2]}"
    else
      echo "Linking ${arr[1]}..."
      ln -s $origin $target
      printf "%-20s => successfully linked!\n" "${arr[2]}"
    fi
  done
}

function setup_pacman() {
  local p=$(join_by " " "${packages[@]}")
  sudo -S pacman -S $p
}

function setup_aur() {
  git clone https://aur.archlinux.org/packages/paru-bin.git
  cd paru-bin
  makepkg -si
}

function setup_arch() {
  echo "Installing deps..."
  setup_pacman
  setup_links
}

case $distro in
  "arch:fresh")
    setup_arch
    ;;
  "arch:link")
    setup_links
    ;;
  "*")
    echo "not supported.."
    ;;
esac
